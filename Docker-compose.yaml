version: '3.8'

services:
  postgres:
    container_name: postgres-db
    image: postgres:latest
    environment:
      POSTGRES_DB: agilbackend
      POSTGRES_USER: your_username
      POSTGRES_PASSWORD: your_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - spring-demo
    restart: unless-stopped

  eureka-server:
    image: eureka-server
    build:
      context: ./Eureka
    ports:
      - 8761:8761
    networks:
      - spring-demo

  config-server:
    image: config_server
    build:
      context: ./config-server
    ports:
      - 8888:8888
    networks:
      - spring-demo
    depends_on:
      - eureka-server

  api-gateway:
    image: api_gateway_image
    build:
      context: ./Api-gateway
    ports:
      - 8080:8080
    networks:
      - spring-demo
    depends_on:
      - eureka-server
      - config-server

  gerant-service:
    image: gerant_service
    build:
      context: ./Gerant
    ports:
      - 8083:8083
    networks:
      - spring-demo
    depends_on:
      - postgres
      - eureka-server
      - config-server

  commande-service:
    image: commande_service
    build:
      context: ./Commande
    ports:
      - 8081:8081
    networks:
      - spring-demo
    depends_on:
      - postgres
      - eureka-server
      - config-server

  reclamation-service:
    image: your_reclamation_service_image
    build:
      context: ./Reclamation
    ports:
      - 8086:8086
    networks:
      - spring-demo
    depends_on:
      - postgres
      - eureka-server
      - config-server

  intervenant-service:
    image: your_intervenant_service_image
    build:
      context: ./Intervenant
    ports:
      - 8084:8084
    networks:
      - spring-demo
    depends_on:
      - postgres
      - eureka-server
      - config-server

  produit-service:
    image: your_produit_service_image
    build:
      context: ./Produit
    ports:
      - 8085:8085
    networks:
      - spring-demo
    depends_on:
      - postgres
      - eureka-server
      - config-server

  utilisateur-service:
    image: user_service_image
    build:
      context: ./User
    ports:
      - 8087:8087
    networks:
      - spring-demo
    depends_on:
      - postgres
      - eureka-server
      - config-server

  etat_de_commande-service:
    image: etat_de_commande_service
    build:
      context: ./Etat_de_commande
    ports:
      - 8082:8082
    networks:
      - spring-demo
    depends_on:
      - postgres
      - eureka-server
      - config-server

networks:
  spring-demo:
    driver: bridge

volumes:
  postgres_data:
    driver: local
